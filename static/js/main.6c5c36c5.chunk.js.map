{"version":3,"sources":["components/Button.js","components/SelectBox.js","components/TextBox.js","utils.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","style","marginTop","width","variant","color","SelectBox","model","setModel","inputLabel","React","useRef","useState","labelWidth","setLabelWidth","useEffect","current","offsetWidth","FormControl","margin","InputLabel","ref","htmlFor","Select","value","onChange","e","target","inputProps","name","id","MenuItem","TextBox","text","setText","TextField","label","fullWidth","multiline","rows","postGenerateTextEndpoint","fn","data","complete","pending","error","res","setRes","req","setReq","axios","then","catch","useAsyncEndpoint","url","method","formReducer","state","event","App","useReducer","formData","setFormData","submitting","setSubmitting","handleChange","isCheckbox","type","checked","generatedText","postGenerateText","className","src","logo","alt","href","rel","Object","entries","map","toString","onSubmit","preventDefault","setTimeout","step","noValidate","autoComplete","userId","result","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c5c36c5.chunk.js","sourcesContent":["import { Button as MaterialButton } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\nconst Button = ({ onClick }) => (\r\n    <MaterialButton\r\n        style={{ marginTop: '1em', width: 'fit-content' }}\r\n        onClick={onClick}\r\n        variant=\"outlined\"\r\n        color=\"primary\">\r\n        Generate\r\n  </MaterialButton>\r\n)\r\n\r\nexport default Button;","import { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\nconst SelectBox = ({ model, setModel }) => {\r\n    const inputLabel = React.useRef(null);\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n    React.useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n    }, []);\r\n\r\n    return (\r\n        <FormControl\r\n            margin='normal'\r\n            style={{ width: '200px' }}\r\n            variant='outlined'>\r\n            <InputLabel ref={inputLabel} htmlFor=\"model-select\">Модель</InputLabel>\r\n            <Select\r\n                value={model}\r\n                labelWidth={labelWidth}\r\n                onChange={e => setModel(e.target.value)}\r\n                inputProps={{\r\n                    name: 'model',\r\n                    id: 'model-select',\r\n                }}\r\n            >\r\n                <MenuItem value={'gpt2'}>Small (117M)</MenuItem>\r\n                <MenuItem value={'gpt2-medium'}>Medium (345M)</MenuItem>\r\n                <MenuItem value={'gpt2-large'}>Large (774M)</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default SelectBox;","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst TextBox = ({ text, setText }) => (\r\n    <TextField\r\n        margin='normal'\r\n        label=\"Введите вопрос...\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        multiline\r\n        rows='4'\r\n        value={text}\r\n        onChange={e => setText(e.target.value)}\r\n    />\r\n);\r\n\r\nexport default TextBox;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ENDPOINT_URL = \"http://localhost:5000/asd_qa\";\r\n\r\nconst useAsyncEndpoint = fn => {\r\n    const [res, setRes] = React.useState({ data: null, complete: false, pending: false, error: false });\r\n    const [req, setReq] = React.useState();\r\n\r\n    React.useEffect(() => {\r\n        if (!req) return;\r\n        setRes({ data: null, pending: true, error: false, complete: false });\r\n        axios(req)\r\n            .then(res =>\r\n                setRes({ data: res.data, pending: false, error: false, complete: true })\r\n            )\r\n            .catch(() =>\r\n                setRes({ data: null, pending: false, error: true, complete: true })\r\n            );\r\n    }, [req]);\r\n\r\n    return [res, (...args) => setReq(fn(...args))];\r\n}\r\n\r\nexport const postGenerateTextEndpoint = () => {\r\n    /* eslint-disable react-hooks/rules-of-hooks */\r\n    return useAsyncEndpoint(data => ({ url: ENDPOINT_URL, method: \"POST\", data }));\r\n}","export default __webpack_public_path__ + \"static/media/logo.58879699.svg\";","import React, { useReducer, useState } from 'react';\nimport Button from './components/Button.js';\nimport SelectBox from './components/SelectBox';\nimport TextBox from './components/TextBox';\nimport './styles.scss';\nimport { postGenerateTextEndpoint } from './utils';\n\nimport logo from './logo.svg';\nimport './App.css';\n\n\nconst formReducer = (state, event) => {\n  return {\n\t  ...state,\n\t  [event.name]: event.value\n    }\n  }\nfunction App() {\n  const [formData, setFormData] = useReducer(formReducer, {});\n  const [submitting, setSubmitting] = useState(false);\n  const handleSubmit = event => {\n\t  event.preventDefault();\n\t  setSubmitting(true);\n    setTimeout(() => {\n      setSubmitting(false);\n    }, 50000);\t  \n}\n\n  const handleChange = event => {\n   const isCheckbox = event.target.type === 'checkbox';\n   setFormData({\n     name: event.target.name,\n     value: isCheckbox ? event.target.checked : event.target.value,\n   })\n }\n \n  const [text, setText] = useState(\"\");\n  const [model, setModel] = useState('gpt2');\n  const [generatedText, postGenerateText] = postGenerateTextEndpoint();\n\n  const generateText = () => {\n    postGenerateText({ text, model, userId: 1 });\n  }\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Вопросно-ответная система ASD QA\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://ods.ai/projects/asd_qa\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Страница проекта на Open Data Science\n        </a>\n\t\t<p> <strong> Давайте познакомимся! </strong> </p>\n\t\t{submitting &&\n\t\t<div> \n         <ul>\n           {Object.entries(formData).map(([name, value]) => (\n             <a key={name}>{name}{value.toString()}. </a>\n           ))}\n         </ul>\n\t\t</div>\n\t\t}\n\t\t<form onSubmit={handleSubmit}>\n\t\t<fieldset>\n\t\t\t<label>\n\t\t\t\t<p>Введите Ваше имя</p>\n\t\t\t\t<input name=\"Приятно познакомиться, \" onChange={handleChange}/>\n\t\t\t</label>\n\t\t</fieldset>\n        <fieldset>\n         <label>\n           <p>Выберите систему</p>\n           <select name=\"Вы выбрали систему \" onChange={handleChange}>\n               <option value=\"\">--Выберите из списка--</option>\n               <option value=\"System 1\">System 1</option>\n               <option value=\"System 2\">System 2</option>\n               <option value=\"System 3\">System 3</option>\n           </select>\n         </label>\n         <label>\n           <p>Введите Ваш возраст</p>\n           <input type=\"number\" name=\"Ваш возраст: \" onChange={handleChange} step=\"1\"/>\n         </label>\n         <label>\n           <p>Согласие на обработку данных</p>\n           <input type=\"checkbox\" name=\"Согласие на обработку данных: \" onChange={handleChange} />\n         </label>\n       </fieldset>\n\t\t<button type=\"submit\">Отправить</button>\n\t\t</form>\t\t\n      </header>\n\t  \n\t<div className='app-container'>\n      <form noValidate autoComplete='off'>\n        <h1>Тестирование GPT-2</h1>\n        <SelectBox model={model} setModel={setModel} />\n        <TextBox text={text} setText={setText} />\n        <Button onClick={generateText} />\n      </form>\n\n      {generatedText.pending &&\n        <div className='result pending'>Пожалуйста, подождите...</div>}\n\n      {generatedText.complete &&\n        (generatedText.error ?\n          <div className='result error'>Ошибка</div> :\n          <div className='result valid'>\n            {generatedText.data.result}\n          </div>)}\n    </div>\n    </div>  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}